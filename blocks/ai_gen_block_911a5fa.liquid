{% doc %}
  @prompt
    an email signup where the input is on top and the button is underneath. the button split between the button and an arrow to the right., I would like to add space between the button and the arrow, heading size should go up to 64 for desktop, I should be able to choose the max-width of the buttons, I would like to be able to choose the width of the buttons
    
    Hovering over the button or the arrow should create the hover state for both elements, there should be corner radius on all sides of both the button and the arrow

{% enddoc %}


{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-email-signup-{{ ai_gen_id }} { max-width: 600px; margin: 0 auto; padding: 40px 20px; text-align: center; }

  .ai-email-signup-heading-{{ ai_gen_id }} { font-size: {{ block.settings.heading_size }}px; color: {{ block.settings.heading_color }}; margin: 0 0 24px 0; }

  .ai-email-signup-subtext-{{ ai_gen_id }} { font-size: 16px; color: {{ block.settings.text_color }}; margin: 0 0 32px 0; line-height: 1.5; }

  .ai-email-signup-form-{{ ai_gen_id }} { display: flex; flex-direction: column; gap: 16px; align-items: center; }

  .ai-email-signup-input-{{ ai_gen_id }} {
    width: 100%; max-width: {{ block.settings.input_max_width }}px; padding: 16px 20px;
    border: 2px solid {{ block.settings.input_border_color }}; border-radius: {{ block.settings.input_border_radius }}px;
    font-size: 16px; background-color: {{ block.settings.input_background_color }}; color: {{ block.settings.input_text_color }};
  }
  .ai-email-signup-input-{{ ai_gen_id }}:focus { outline: none; border-color: {{ block.settings.input_focus_color }}; }

  .ai-email-signup-button-wrapper-{{ ai_gen_id }} { display: flex; width: {{ block.settings.button_width }}px; max-width: {{ block.settings.button_max_width }}px; gap: {{ block.settings.button_gap }}px; }

  .ai-email-signup-button-{{ ai_gen_id }}, .ai-email-signup-arrow-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_background_color }}; color: {{ block.settings.button_text_color }};
    border: none; border-radius: {{ block.settings.button_border_radius }}px; cursor: pointer;
    transition: background-color .3s ease, color .3s ease;
    overflow: hidden; display: flex; align-items: center; justify-content: center; height: 52px;
  }
  .ai-email-signup-button-{{ ai_gen_id }} { flex: 1; padding: 0 24px; font-size: 22px; font-family: "Trim"; font-weight: 500; position: relative; }
  .ai-email-signup-arrow-{{ ai_gen_id }} { width: 60px; position: relative; }

  .ai-email-signup-button-wrapper-{{ ai_gen_id }}:hover .ai-email-signup-button-{{ ai_gen_id }},
  .ai-email-signup-button-wrapper-{{ ai_gen_id }}:hover .ai-email-signup-arrow-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_hover_background_color }}; color: {{ block.settings.button_hover_text_color }};
  }

  /* Slide animation (absolute layers) */
  .slide-wrapper { position: relative; display: block; width: 100%; height: 100%; overflow: hidden; }
  .slide-text, .slide-arrow {
    position: absolute; inset: 0; display: flex; align-items: center; justify-content: center;
    transition: transform .32s cubic-bezier(.22,.61,.36,1); will-change: transform; backface-visibility: hidden; transform: translateY(0);
  }
  .slide-text:last-child, .slide-arrow:last-child { transform: translateY(100%); }
  .ai-email-signup-button-wrapper-{{ ai_gen_id }}:hover .slide-text:first-child,
  .ai-email-signup-button-wrapper-{{ ai_gen_id }}:hover .slide-arrow:first-child { transform: translateY(-100%); }
  .ai-email-signup-button-wrapper-{{ ai_gen_id }}:hover .slide-text:last-child,
  .ai-email-signup-button-wrapper-{{ ai_gen_id }}:hover .slide-arrow:last-child { transform: translateY(0); }

  .ai-email-signup-arrow-icon-{{ ai_gen_id }} { width: 20px; height: 20px; display: block; }

  .ai-email-signup-success-{{ ai_gen_id }} { color: {{ block.settings.success_color }}; margin-top: 16px; font-size: 14px; }
  .ai-email-signup-error-{{ ai_gen_id }} { color: {{ block.settings.error_color }}; margin-top: 16px; font-size: 14px; }

  @media (max-width: 749px) {
    .ai-email-signup-heading-{{ ai_gen_id }} { font-size: {{ block.settings.heading_size | times: 0.8 }}px; }
    .ai-email-signup-button-wrapper-{{ ai_gen_id }} { width: 100%; max-width: {{ block.settings.input_max_width }}px; }
  }
{% endstyle %}

<div class="ai-email-signup-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.heading != blank %}<h2 class="ai-email-signup-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>{% endif %}
  {% if block.settings.subtext != blank %}<div class="ai-email-signup-subtext-{{ ai_gen_id }}">{{ block.settings.subtext }}</div>{% endif %}

  {%- comment -%} Newsletter form so subscribers land in Customers (accepts marketing) {%- endcomment -%}
  {% form 'customer' %}
    <div class="ai-email-signup-form-{{ ai_gen_id }}">
      <input type="hidden" name="contact[tags]" value="newsletter, Founding Member">
      <input type="hidden" name="customer[accepts_marketing]" value="true">

      <input
        type="email"
        name="contact[email]"
        class="ai-email-signup-input-{{ ai_gen_id }}"
        value="{{ form.email }}"
        aria-required="true"
        autocorrect="off" autocapitalize="off" autocomplete="email"
        {% if form.errors %} aria-invalid="true" aria-describedby="ai-email-signup-error-{{ ai_gen_id }}"{% endif %}
        placeholder="{{ block.settings.email_placeholder }}"
        required
      >

      <div class="ai-email-signup-button-wrapper-{{ ai_gen_id }}">
        <button type="submit" class="ai-email-signup-button-{{ ai_gen_id }}">
          <span class="slide-wrapper">
            <span class="slide-text">{{ block.settings.button_text }}</span>
            <span class="slide-text">{{ block.settings.button_text }}</span>
          </span>
        </button>

        <!-- Arrow also submits -->
        <button type="submit" class="ai-email-signup-arrow-{{ ai_gen_id }}" aria-label="Submit email">
          <span class="slide-wrapper">
            <span class="slide-arrow">
              <svg class="ai-email-signup-arrow-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M5 12h14M12 5l7 7-7 7"/>
              </svg>
            </span>
            <span class="slide-arrow">
              <svg class="ai-email-signup-arrow-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M5 12h14M12 5l7 7-7 7"/>
              </svg>
            </span>
          </span>
        </button>
      </div>

      {% if form.errors %}
        <div id="ai-email-signup-error-{{ ai_gen_id }}" class="ai-email-signup-error-{{ ai_gen_id }}">{{ form.errors.messages.email }}</div>
      {% endif %}

      {%- comment -%}
        These meta tags are only present in the HTML Shopify would render *after* submit.
        Our JS (below) fetches that HTML invisibly and checks for this marker to decide whether to redirect.
      {%- endcomment -%}
      {% if form.posted_successfully? %}<meta name="newsletter-success" content="true">{% endif %}
    </div>
  {% endform %}
</div>

<script>
  (function () {
    const root = document.currentScript.previousElementSibling; // the wrapping div above
    if (!root) return;
    const form = root.querySelector('.ai-email-signup-{{ ai_gen_id }} form');
    if (!form) return;

    // Build success URL and preserve any UTM params
    const successURL = (function () {
      const u = new URL('/pages/signup-success', window.location.origin);
      const params = new URLSearchParams(window.location.search);
      if (params.toString()) u.search = params.toString();
      return u.toString();
    })();

    // We'll POST to the current page so the server re-renders this block (and our meta marker)
    const postURL = window.location.pathname + window.location.search;

    function nativeSubmitFallback() {
      try { HTMLFormElement.prototype.submit.call(form); } catch (e) { form.submit(); }
    }

    form.addEventListener('submit', function (e) {
      if (!window.fetch || !window.DOMParser) return; // graceful fallback
      e.preventDefault();

      const fd = new FormData(form);
      const buttons = form.querySelectorAll('button[type="submit"]');
      buttons.forEach(b => b.disabled = true);

      fetch(postURL, {
        method: 'POST',
        body: fd,
        credentials: 'same-origin',
        headers: { 'Accept': 'text/html' },
        redirect: 'follow'
      })
      .then(async (res) => {
        const html = await res.text();
        const successInURL = res.url && (res.url.indexOf('customer_posted=true') > -1 || res.url.indexOf('contact_posted=true') > -1);

        const doc = new DOMParser().parseFromString(html, 'text/html');
        const successMeta = !!doc.querySelector('meta[name="newsletter-success"][content="true"]');

        if (successInURL || successMeta) {
          window.location.assign(successURL); // smooth, no flicker
          return;
        }

        // Show server error (prefer server-rendered message if present)
        const serverErr =
          doc.querySelector('#ai-email-signup-error-{{ ai_gen_id }}') ||
          doc.querySelector('[role="alert"], .form__message, [data-form-status]');

        let errBox = root.querySelector('#ai-email-signup-error-{{ ai_gen_id }}');
        if (!errBox) {
          errBox = document.createElement('div');
          errBox.id = 'ai-email-signup-error-{{ ai_gen_id }}';
          errBox.className = 'ai-email-signup-error-{{ ai_gen_id }}';
          form.appendChild(errBox);
        }
        errBox.innerHTML = serverErr ? serverErr.innerHTML : 'Please enter a valid email.';
      })
      .catch(() => {
        // Network or fetch error: fall back to native submit
        nativeSubmitFallback();
      })
      .finally(() => {
        buttons.forEach(b => b.disabled = false);
      });
    }, { passive: false });
  })();
</script>


{% schema %}
{
  "name": "Email signup",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Stay in the loop"
    },
    {
      "type": "textarea",
      "id": "subtext",
      "label": "Subtext",
      "default": "Subscribe to our newsletter for the latest updates and exclusive offers."
    },
    {
      "type": "text",
      "id": "email_placeholder",
      "label": "Email placeholder",
      "default": "Enter your email address"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Subscribe"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Thanks for subscribing!"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 64,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "input_max_width",
      "min": 200,
      "max": 600,
      "step": 20,
      "unit": "px",
      "label": "Input max width",
      "default": 400
    },
    {
      "type": "range",
      "id": "button_width",
      "min": 200,
      "max": 500,
      "step": 20,
      "unit": "px",
      "label": "Button width",
      "default": 300
    },
    {
      "type": "range",
      "id": "button_max_width",
      "min": 200,
      "max": 600,
      "step": 20,
      "unit": "px",
      "label": "Button max width",
      "default": 400
    },
    {
      "type": "range",
      "id": "button_gap",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Gap between button and arrow",
      "default": 4
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "input_background_color",
      "label": "Input background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_text_color",
      "label": "Input text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border color",
      "default": "#e6e6e6"
    },
    {
      "type": "color",
      "id": "input_focus_color",
      "label": "Input focus border color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background_color",
      "label": "Button hover background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Button hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "success_color",
      "label": "Success message color",
      "default": "#008060"
    },
    {
      "type": "color",
      "id": "error_color",
      "label": "Error message color",
      "default": "#d82c0d"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "input_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Input border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Email signup"
    }
  ]
}
{% endschema %}