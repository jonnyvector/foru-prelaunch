{%- doc -%}
  Renders a video element, from a video object (<video> element) or a video URL (<iframe> element)

  Shared parameters:
  @param {boolean} [video_autoplay]
  @param {boolean} [video_loop]
  @param {string}  [video_class]
  @param {string}  [video_style]
  @param {object}  [video_preview_image]
  @param {string}  [widths]
  @param {string}  [sizes]
  @param {string}  [loading]
  @param {string}  [additional_attributes]
  @param {string}  [video_type] 'youtube' or 'vimeo'
  @param {boolean} [disable_controls]
  @param {object}  video - Shopify video object OR string (YouTube/Vimeo ID)
  @param {string}  section_id
  @param {object}  [block]

  Video from URL:
  @param {boolean} [video_from_url]
  @param {string}  [video_alt]

  Example:
  {% render 'video', video: section.settings.video, section_id: section.id %}
{%- enddoc -%}

{% liquid
  assign block_settings = block.settings
  assign video_alt = video_alt | default: video.alt
  assign alt = 'blocks.load_video' | t: description: video_alt | escape

  # Force background-style playback
  assign video_autoplay = true
  assign video_loop = true
  assign disable_controls = true

  # No poster â†’ no overlay/play button
  assign video_preview_image = blank

  # Responsive defaults
  assign media_width_desktop = 100 | divided_by: 2 | append: 'vw'
  assign media_width_mobile = '100vw'
  assign sizes = '(min-width: 750px) ' | append: media_width_desktop | append: ', ' | append: media_width_mobile
  assign widths = '240, 352, 832, 1200, 1600, 1920, 2560, 3840'
%}

{% if video_from_url %}
  {% liquid
    if video_type == 'youtube'
      assign video_src = 'https://www.youtube.com/embed/VIDEO_ID?' | replace: 'VIDEO_ID', video

      # Hardened params: no UI, inline, muted, loop
      assign video_src = video_src
        | append: '&autoplay=1&mute=1&playsinline=1&controls=0&rel=0&modestbranding=1&fs=0&iv_load_policy=3&disablekb=1'
        | append: '&loop=1&playlist=' | append: video

      assign class = 'js-youtube'
    else
      assign video_src = 'https://player.vimeo.com/video/VIDEO_ID?' | replace: 'VIDEO_ID', video

      # Vimeo background mode hides all UI and implies muted autoplay
      assign video_src = video_src
        | append: '&background=1&autoplay=1&muted=1&loop=1&playsinline=1&title=0&byline=0&portrait=0'

      assign class = 'js-vimeo'
    endif
  %}
  {% capture video_iframe %}
    <iframe
      src="{{ video_src }}"
      class="{{ class }}"
      allow="autoplay; encrypted-media; picture-in-picture"
      allowfullscreen
      title="{{ video_alt | escape }}"
    ></iframe>
  {% endcapture %}
{% else %}
  {% liquid
    if disable_controls
      assign controls = false
      assign enable_js_api = true
    else
      assign controls = true
      assign enable_js_api = false
    endif
  %}

  {% capture video_tag %}
    {% if video.host == 'youtube' %}
      {{
        video
        | external_video_url:
            autoplay: true,
            loop: true,
            playlist: video.external_id,
            mute: '1',
            controls: controls,
            playsinline: '1',
            enablejsapi: enable_js_api,
            modestbranding: '1',
            rel: '0',
            fs: '0',
            iv_load_policy: '3',
            disablekb: '1'
        | external_video_tag: data-video-type: 'youtube'
      }}
    {% elsif video.host == 'vimeo' %}
      {{
        video
        | external_video_url:
            autoplay: true,
            loop: true,
            muted: '1',
            controls: controls,
            playsinline: '1',
            api: enable_js_api,
            background: '1',
            title: '0',
            byline: '0',
            portrait: '0'
        | external_video_tag: data-video-type: 'vimeo'
      }}
    {% else %}
      {{ video | video_tag:
          image_size: '2500x',
          autoplay: true,
          loop: true,
          muted: true,
          playsinline: true,
          controls: false
      }}
    {% endif %}
  {% endcapture %}
{% endif %}

{% if video != blank %}
  <deferred-media
    class="{{ video_class }}"
    style="{{ video_style }}"
    autoplay
    {{ additional_attributes }}
  >
    {# No poster/overlay rendered at all #}

    <template>
      {% if video_from_url %}
        {{ video_iframe }}
      {% else %}
        {{ video_tag }}
      {% endif %}
    </template>

    {# Direct render so it plays immediately #}
    {% if video_from_url %}
      {{ video_iframe }}
    {% else %}
      {{ video_tag }}
    {% endif %}
  </deferred-media>
{% else %}
  <div
    {{ additional_attributes }}
    class="{%- if video_class -%}{{ video_class }} {%- endif -%}video-placeholder-wrapper"
    style="{%- if video_style -%}{{ video_style }} {%- endif -%}--video-placeholder-width: {{ block_settings.custom_width | default: 100 }}%;"
  >
    {{ 'hero-apparel-3' | placeholder_svg_tag }}
  </div>
{% endif %}

{% stylesheet %}
  /* No overlays exist, but ensure zero interactivity/UI surfacing */
  .deferred-media iframe,
  .deferred-media video {
    pointer-events: none;
  }
{% endstylesheet %}
